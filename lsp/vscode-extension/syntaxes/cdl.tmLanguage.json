{
  "scopeName": "source.cdl",
  "patterns": [
    {
      "name": "keyword.control.cdl",
      "match": "\\b(intent|rule|policy|flow|mapping|type|end)\\b"
    },
    {
      "name": "keyword.other.cdl",
      "match": "\\b(inputs|outputs|goal|description|evidence|tags|request|response|applies_to|expression|where|policies|trust)\\b"
    },
    {
      "name": "keyword.operator.cdl",
      "match": "\\b(and|or|not|in)\\b"
    },
    {
      "name": "keyword.control.constraint.cdl",
      "match": "\\b(where)\\b"
    },
    {
      "name": "storage.type.cdl",
      "match": "\\b(string|int|decimal|bool|date|datetime|Email|Money)\\b"
    },
    {
      "name": "support.function.cdl",
      "match": "\\b(length|contains|startsWith|endsWith|today)\\b"
    },
    {
      "name": "string.quoted.double.cdl",
      "begin": "\"",
      "end": "\""
    },
    {
      "name": "comment.line.number-sign.cdl",
      "begin": "#",
      "end": "$"
    },
    {
      "name": "constant.language.boolean.cdl",
      "match": "\\b(true|false)\\b"
    },
    {
      "name": "constant.numeric.cdl",
      "match": "\\b\\d+(?:\\.\\d+)?\\b"
    },
    {
      "name": "entity.name.type.cdl",
      "match": "\\b[A-Z][A-Z0-9_]*\\b"
    },
    {
      "name": "variable.parameter.cdl",
      "match": "\\b[a-z][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "keyword.operator.comparison.cdl",
      "match": "(==|!=|<=|>=|<|>)"
    },
    {
      "name": "meta.type.constraint.cdl",
      "begin": "\\bwhere\\b",
      "end": "(?=\\bend\\b|\\n)",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    }
  ]
}